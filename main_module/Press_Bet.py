import orjson
import random
from config import TOKEN
from main_module.main_function import *
from rules import From_Me,Prefix


pres_bet_labeler = UserLabeler()
pres_bet_labeler.vbml_ignore_case = True

"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ç—ã–∫–∞–Ω—å—è –º–æ–Ω–µ—Ç–∫–∏"""
pres_bet = False
"""–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞"""
bet_max=10000
"""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞"""
bet_min=1000
"""–ù–æ–º–µ—Ä–∞ —á–∞—Ç–æ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è —Å—Ç–∞–≤–æ–∫"""
pres_peer=[0]

"""–ü—Ä–∏–≤—è–∑–∫–∞ –º–æ–Ω–µ—Ç–∫–∏ –∫ —á–∞—Ç—É"""
@pres_bet_labeler.message(From_Me(),Prefix(),text=['<pref>–∞–∞–π–¥–∏','<pref>–∞–∞–π–¥–∏ <peer_id>','<pref>–∞–∞–π–¥–∏<peer_id>'])
@error
async def pres_bet_listing(message: Message, peer_id:str=""):
    global pres_peer

    if peer_id =='+':
        if not message.peer_id in pres_peer:
            pres_peer.append(message.peer_id)
        
    elif peer_id =='-':
        if message.peer_id in pres_peer:
            pres_peer.remove(message.peer_id)
    elif peer_id == '0':
        pres_peer=[0]
    else:
        if not message.peer_id in pres_peer:
            pres_peer.append(message.peer_id)
        elif message.peer_id in pres_peer:
            pres_peer.remove(message.peer_id)
    from main_module.main_function import Main_user
    await mess_new(message=message,text=f'üìã –í–∞—à id: {Main_user.id}',red=True)

"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã–∑ —á–∞—Ç–æ–≤"""
@pres_bet_labeler.message(From_Me(),Prefix(),text=['<pref>–º–æ–Ω–µ—Ç–∫–∞ –ª–∏—Å—Ç','<pref>–º–ª'])
@error
async def pres_bet_list_checing(message: Message, peer_id:str="",):
    if pres_peer == [0]:
        text = (
        "üìã –ê–≤—Ç–æ –ú–æ–Ω–µ—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö!\n\n"
    )
    else:
        text = (
        "üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã—Ö –∫ –∞–≤—Ç–æ–º–æ–Ω–µ—Ç–∫–µ:\n\n"
        )
        i=1
        for x in pres_peer:
            text+=f"{i}. {x}\n"
            i+=1
        
        text+=f"üî∏ –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {i} \n"

    await mess_new(message=message,text=text,red=True)

"""–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–∏"""
@pres_bet_labeler.message(From_Me(),Prefix(),text=['<pref>—Å—Ç–∞–≤–∫–∞ <type> <sum>','<pref> –º–æ–Ω–µ—Ç–∫–∞ —Å—Ç–∞–≤–∫–∞ <type> <sum>'])
@error
async def pres_bet_max_min(message: Message, type:str, sum:str):
    global bet_max
    global bet_min

    if type == '–º–∞–∫—Å':
        bet_max = int(sum)
    elif type == '–º–∏–Ω':
        bet_min = int(sum)
    else:
       return

    await mess_new(message=message,text=f'‚öîÔ∏è {type} —Å—Ç–∞–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.',red=True) 

"""–í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ç—ã–∫–∞ –º–æ–Ω–µ—Ç–∫–∏"""
@pres_bet_labeler.message(From_Me(),Prefix(),text=['<pref>–ø—Ä–µ—Å–±–µ—Ç','<pref>–∞–≤—Ç–æ–º–æ–Ω–µ—Ç–∫–∞','<pref>–º–æ–Ω–µ—Ç–∫–∞'])
@error
async def pres_bet_vkl(message: Message):
    global pres_bet

    if pres_bet: 
        pres_bet = False
        text = "‚ùå –ú–æ–Ω–µ—Ç–∫–∞ –≤—ã–∫–ª"
    else: 
        pres_bet = True
        text = "‚úÖ –º–æ–Ω–µ—Ç–∫–∞ –≤–∫–ª"

    await mess_new(message=message,text=text,red=True)

"""–ù–∞—Å—Ç—Ä–æ–π–∫–∏"""
@pres_bet_labeler.message(From_Me(),Prefix(),text=['<pref>–ø—Ä–µ—Å–±–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'])
@error
async def pres_bet_option(message: Message):
    global pres_bet

    text = (
        "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ê–≤—Ç–æ–º–æ–Ω–µ—Ç–∫–∏:\n\n"
    )
    if pres_bet: 
        text += "‚úÖ –º–æ–Ω–µ—Ç–∫–∞ –≤–∫–ª\n\n"
    else: 
        text += "‚ùå –ú–æ–Ω–µ—Ç–∫–∞ –≤—ã–∫–ª\n\n"

    text += f"‚öîÔ∏è –ü—Ä–∏–Ω–∏–º–∞–µ–º—ã–µ —Å—Ç–∞–≤–∫–∏: {bet_min} - {bet_max}\n\n"

    text += f"üìã –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —á–∞—Ç—ã: "
    if pres_peer == [0]:
        text+="–í—Å–µ"
    else:
        text+=f"{pres_peer}"
        

    await mess_new(message=message,text=text,red=True)


@pres_bet_labeler.chat_message()
async def pres_bet_game_catch(message: Message):
    if pres_bet:
        if keyboard := message.keyboard:
            payload: dict = orjson.loads(keyboard.buttons[0][0]['action']['payload'])

            if payload.get('type') == 'coin_game':
                if message.peer_id in pres_peer or pres_peer==[0]:
                    if  payload.get('bet') <= bet_max and payload.get('bet')>= bet_min:
                        if payload.get('play_id') == 0 or payload.get('play_id') == Main_user.id:
                            st = random.choice([0,1])
                            payload_button=message.keyboard.buttons[0][st]["action"]["payload"]

                            await user.api.request('messages.sendMessageEvent', {'author_id': -205747591,'message_id': message.id,'peer_id': message.peer_id, "payload": payload_button}) 
                            logger.info(f"ü™ô –¢—ã–∫–∞—é —Å—Ç–∞–≤–∫—É {payload_button['user_id']}  –Ω–∞ —Å—É–º–º—É {payload_button['bet']}")